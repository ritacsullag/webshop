openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/products/product:
    post:
      tags:
      - product-controller
      operationId: createNewProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: object
  /api/products/product/{id}:
    post:
      tags:
      - product-controller
      operationId: modifyProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: object
    delete:
      tags:
      - product-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: object
  /api/category:
    post:
      tags:
      - category-controller
      operationId: createNewCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: object
  /api/products/search:
    get:
      tags:
      - product-controller
      operationId: searchProduct
      parameters:
      - name: name
        in: query
        schema:
          type: string
      - name: price
        in: query
        schema:
          type: array
          items:
            type: number
            format: double
      - name: full
        in: query
        required: false
        schema:
          type: boolean
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: sort
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDto'
  /api/products/pricehistory/{id}:
    get:
      tags:
      - product-controller
      operationId: getProductHistoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HistoryDataProductPriceHistoryDto'
components:
  schemas:
    CategoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        products:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProductDto'
    ProductDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: double
        category:
          $ref: '#/components/schemas/CategoryDto'
#    Predicate:
#      type: object
#    Pageable:
#      type: object
#      properties:
#        page:
#          minimum: 0
#          type: integer
#          format: int32
#        size:
#          minimum: 1
#          type: integer
#          format: int32
#        sort:
#          type: array
#          items:
#            type: string
    HistoryDataProductPriceHistoryDto:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProductPriceHistoryDto'
        date:
          type: string
          format: date-time
    ProductPriceHistoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
          format: double
