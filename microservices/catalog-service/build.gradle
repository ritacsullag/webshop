plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "org.hibernate.orm" version "6.2.5.Final"
    id "org.openapi.generator" version "6.6.0"
}

group = 'com.csullagrita'
version = '0.0.1-SNAPSHOT'

ext {
    set('springCloudVersion', "2022.0.4")
}

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

//    mapper
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

//    db
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

//    QueryDsl dinamikus kereses:
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    //    Entity history:
    implementation 'org.hibernate.orm:hibernate-envers'

    //infinispan cache
    implementation 'org.infinispan:infinispan-hibernate-cache-v60'
    //uzleti logika szintu cache
    implementation 'org.infinispan:infinispan-spring6-embedded'

    //Create open-api doc
//    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    //openapi-generator
    implementation "org.openapitools:openapi-generator-gradle-plugin:6.6.0"
    implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

//    config-server-client
    implementation 'org.springframework.cloud:spring-cloud-starter-config:4.0.4'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', "${buildDir}/generated/src/main/java/"]
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/openapi/api-docs.yaml")
    outputDir.set("$buildDir/generated")
    apiPackage.set("com.csullagrita.catalogservice.api")
    modelPackage.set("com.csullagrita.catalogservice.api.model")
    configOptions.set([
            useTags       : true.toString(),
            dateLibrary   : "java8-datetime",
            configPackage : "com.csullagrita.catalogservice.api.model",
            interfaceOnly : true.toString(),
            useSpringBoot3: true.toString()
    ])
}
